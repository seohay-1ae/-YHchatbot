from dotenv import load_dotenv
load_dotenv()
import os
from openai import OpenAI

client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

def handle_faq(user_message):
    CUSTOMER_SERVICE_INFO = {
        "반품": "제품 수령 후 2일 이내 반품 신청 가능합니다. 제품이 불량이거나 오배송일 경우에만 반품 가능합니다. 단순 변심 등 사유로는 반품 불가합니다. 반품 신청은 판매자 연락처로 접수 후 검수 후 환불 처리됩니다.",
        "배송": "즉시구매일 경우, 오전 11시 이전 주문 시 당일 출하되고, 이후 주문 시 익일 출하됩니다.\n 예약 구매일 경우, 상품상세 페이지에 고시된 판매종료일자의 익일 출하됩니다.\n 배송은 출고 후 1~3일 소요됩니다. 배송사는 판매자별로 상이 할 수 있습니다.",
        "결제": "신용카드, 토스페이 간편결제, 카카오페이 등 다양한 결제 방법을 지원합니다.",
        "회원가입": "이메일 인증 후 가입이 완료됩니다.",
        "가입 승인": "회원 가입 승인까지 영업일 기준 1~2일 소요됩니다. 승인 완료 시 문자 메세지를 보내드립니다.",
        "상품 등록 제한": "등록이 제한되는 상품은 다음과 같습니다.\n- 유통기한이 지난 농산물\n- 가공식품, 반찬류, 탕류 등 가공품(곶감 제외)\n- 씨앗, 묘목, 농약, 비료 등 기타 금지 물품\n- 고기, 생선, 계란, 유제품 등 동물성 식품\n- 그 외 농산물에 해당하지 않는 기타 상품\n 상품등록시 안내사항에서 자세한 내용을 확인할 수 있습니다.\n 사이트에서 취급 중인 상품 목록을 알려드릴까요?",
        "판매자 구매": "판매자로 가입하신 경우, 상품 구매도 가능합니다.",
        "구매자 판매": "구매자로 가입하신 경우, 판매자로 재가입 하시거나 고객센터에 문의주세요.",
        "고객센터 연락처": "고객센터 연락처는 010-1234-5678입니다.",
        "배송 문의": "배송 문의는 판매자에게 문의주세요.",
        "반품 문의": "반품 문의는 판매자에게 문의주세요.",
        "판매자 문의": "판매자 정보는 상품 상세페이지의 상품카드나, 배송/반품정보 탭의 하단 '문의연락처'에서 확인할 수 있습니다.",
        "상품 등록 유의사항": "- 상품명은 명확하게 작성해 주세요.\n - 상품 이미지는 1장 이상 등록해야 하며, 실제 상품과 동일해야 합니다.\n - 썸네일 이미지는 1장 등록 가능하며, 상품상세 이미지는 1장~3장 등록 가능합니다.\n - 상품 단위, 규격, 수량, 가격을 정확히 입력해 주세요.\n - 유통기한이 지난 상품이나 플랫폼에서 금지한 품목은 등록할 수 없습니다.\n - 욕설, 비방, 광고성 문구, 외부 링크는 작성할 수 없습니다.\n - 개인정보(연락처, 계좌번호 등)를 상품 설명에 포함하지 마세요.\n - 도배, 중복 등록된 상품은 관리자에 의해 삭제될 수 있습니다.\n - 타인의 이미지나 글을 무단으로 사용하는 경우 제재를 받을 수 있습니다.\n - 등록된 상품 정보가 사실과 다를 경우, 거래 제한 및 판매 중지 조치가 있을 수 있습니다.\n - 예약상품의 경우 예약금의 비율은 기본 50%입니다."
    }
    faq_list = "\n".join([f"- {k}: {v}" for k, v in CUSTOMER_SERVICE_INFO.items()])
    prompt = f"""
아래는 고객센터 FAQ 질문과 답변입니다.

{faq_list}

사용자 질문: \"{user_message}\"

가장 적합한 FAQ 답변만 골라서, 공손하고 친근한 말투로 2~3문장으로 자연스럽게 안내해줘.
만약 적합한 답변이 없으면 '죄송합니다. 해당 질문에 대한 안내가 없습니다.'라고 답해줘.
"""
    completion = client.chat.completions.create(
        model="gpt-4o-2024-05-13",
        messages=[{"role": "user", "content": prompt}],
        max_tokens=300,
        temperature=0.5
    )
    answer = completion.choices[0].message.content.strip()
    # 후처리: 답변에 '가공품(곶감 제외)'가 포함되어 있으면 문구 강제 포함
    if "가공품(곶감 제외)" in answer and "사이트에서 취급 중인 상품 목록을 알려드릴까요?" not in answer:
        answer += "\n사이트에서 취급 중인 상품 목록을 알려드릴까요?"
    return {"response": answer, "type": "customer_service"} 